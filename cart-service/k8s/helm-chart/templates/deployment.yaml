apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.moduleName }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: {{ .Values.workloadSelector }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: {{ .Values.workloadSelector }}
    spec:
      affinity: {}
      containers:
      - image: {{ .Values.artifactoryUrl }}/{{ .Values.moduleName }}:{{ .Values.version }}
        imagePullPolicy: Always
        name: {{ .Values.moduleName }}
        env:
        - name: product-service-host
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap }}
              key: product-service-host
        - name: product-service-port
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap }}
              key: product-service-port
        - name: cart-db-user
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: cart-db-user
        - name: cart-db-password
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets }}
              key: cart-db-password
        - name: cart-db-host
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap }}
              key: cart-db-host
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
